from OpenAiGym.MinTermSrpobfEnv.MinTermSrpobfEnv import MinTermSrpobfEnv, ActionType
from stable_baselines3 import PPO, A2C, DQN, DDPG

from OpenAiGym.MinTermLpSrpobfEnv.MinTermLpSrpobfEnv import MinTermLpSrpobfEnv


from OpenAiGym.RLAlgorithmRunners.DqnRunner.DqnRunner import dqn_runner
metrics, envs=dqn_runner(5,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermSrpobfEnv/Data/5dim/DQN/2",[42,48])

from OpenAiGym.RLAlgorithmRunners.DqnRunner.DqnRunner import *
env4, model4 = dqn_runner_equivalent_functions(4,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermSrpobfEnv/Data/4dim/DQN/")
env = dqn_runner_equivalent_functions(3,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermSrpobfEnv/Data/3dim/DQN/")

env,model= dqn_runner_equivalent_functions(4,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermLpSrpobfEnv/Data/4dim/DQN/", KeyType.MONOMIAL_SET)

import random
from OpenAiGym.RLAlgorithmRunners.DqnRunner.DqnRunner import *
dimension = 3
two_to_power_dimension = 2**dimension
time_steps=3000000
root_dir="/home/oytun/PycharmProjects/research/OpenAiGym/MinTermLpSrpobfEnv/Data/" + str(dimension) + "dim/DQN/"
output_prefix="dimension_functions_random_range_0_to_65536_size_49152"
functions = random.sample(range(0, 2**two_to_power_dimension), int(2**two_to_power_dimension*0.75))
env,model= dqn_runner_functions(functions, dimension, time_steps, root_dir, output_prefix, KeyType.MONOMIAL_SET)

from OpenAiGym.RLAlgorithmRunners.RandomActionRunner.RandomActionRunner import *
dimension = 3
two_to_power_dimension = 2**dimension
time_steps=12000000
output_prefix="dimension_all_functions"
root_dir="/home/oytun/PycharmProjects/research/OpenAiGym/MinTermLpSrpobfEnv/Data/" + str(dimension) + "dim/RandomAction/"
functions = list(range(0, 2**two_to_power_dimension))
env = random_action_runner(functions, dimension, time_steps, root_dir, output_prefix, KeyType.MONOMIAL_SET)

from OpenAiGym.RLAlgorithmRunners.RandomActionRunner.RandomActionRunner import *
dimension = 4
n=20
output_prefix="dimension_all_functions"
root_dir="/home/oytun/PycharmProjects/research/OpenAiGym/MinTermLpSrpobfEnv/Data/" + str(dimension) + "dim/RandomAction/"
env = random_action_runner_n_times(dimension, n, root_dir, output_prefix, KeyType.MONOMIAL_SET)

env,model = dqn_runner_functions(functions, dimension, time_steps, root_dir, output_prefix, KeyType.MONOMIAL_SET,model)

from OpenAiGym.RLAlgorithmRunners.Utils.DumpOutputs import *
from OpenAiGym.RLAlgorithmRunners.Utils.DataHelperFunctions import *

dir = "/home/oytun/PycharmProjects/research/OpenAiGym/MinTermLpSrpobfEnv/Data/4dim/RandomAction/4dimension_all_functions_2022-03-14 03:08:51.547127"
perf = load_json(dir,"performance_results")
mean_p,dev_p = runner_overall_performance(perf)

train = load_json(dir,"training_data_test_results")
mean_t,dev_t = runner_overall_performance(train)

functions = load_json(dir,"function_each_episode")
functions = numpy.unique(functions).tolist()
model=dqn_load_model(dir)
env = env_creator(functions, dimension, KeyType.MONOMIAL_SET)


from OpenAiGym.RLAlgorithmRunners.RandomActionRunner.RandomActionRunner import random_action_runner
random_action_runner(5,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermSrpobfEnv/Data/5dim/RandomAction/2")
three_reward = random_action_runner(3)
four_reward = random_action_runner(4)

from OpenAiGym.RLAlgorithmRunners.RandomKVectorRunner.RandomKVectorRunner import random_k_vector_runner
random_k_vector_runner(5,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermSrpobfEnv/Data/5dim/RandomKVector")
three_reward = random_k_vector_runner(3)
four_reward = random_k_vector_runner(4)

dqn_runner(5,"/home/oytun/PycharmProjects/research/OpenAiGym/MinTermSrpobfEnv/Data/Visuals/5dim/DQN",[12,13])

from SigmaPiFrameworkPython.Utils.boolean_function_utils import *